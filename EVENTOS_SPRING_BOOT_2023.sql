CREATE DATABASE EVENTOS_SPRING_BOOT;
USE EVENTOS_SPRING_BOOT;

CREATE TABLE TIPOS
(ID_TIPO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(45) NOT NULL,
DESCRIPCION VARCHAR(200)
);


CREATE TABLE EVENTOS
(ID_EVENTO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR(200),
FECHA_INICIO DATE,
DURACION INT,
DIRECCION VARCHAR(100),
ESTADO VARCHAR(20),
DESTACADO CHAR(1),
AFORO_MAXIMO INT,
MINIMO_ASISTENCIA INT,
PRECIO DEC(9,2),
ID_TIPO INT NOT NULL,
FOREIGN KEY(ID_TIPO) REFERENCES TIPOS(ID_TIPO)
);

CREATE TABLE USUARIOS
(ID_USUARIO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
USERNAME VARCHAR(45) NOT NULL UNIQUE,
PASSWORD VARCHAR(45) NOT NULL,
EMAIL VARCHAR(100) NOT NULL UNIQUE,
NOMBRE VARCHAR(50),
DIRECCION VARCHAR(100),
ENABLED INT NOT NULL DEFAULT 1,
FECHA_REGISTRO DATE
);

CREATE TABLE RESERVAS
(ID_RESERVA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_EVENTO INT NOT NULL,
ID_USUARIO INT NOT NULL,
PRECIO_VENTA DEC(9,2),
OBSERVACIONES VARCHAR(200),
CANTIDAD INT,
FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
FOREIGN KEY(ID_EVENTO) REFERENCES EVENTOS(ID_EVENTO)
);

-- TABLAS PARA LOGIN, LOGOUT y REGISTRO o  SPRING SECURITY 

CREATE TABLE PERFILES
(ID_PERFIL INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOMBRE VARCHAR(45) NOT NULL
);

CREATE TABLE USUARIO_PERFILES
(ID_USUARIO INT NOT NULL,
ID_PERFIL INT NOT NULL,
PRIMARY KEY(ID_USUARIO, ID_PERFIL),
FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
FOREIGN KEY(ID_PERFIL) REFERENCES PERFILES(ID_PERFIL)
);
-- creacion de usuarios para aislarlo del root

create user ureservas identified by 'ureservas';
grant all privileges on EVENTOS_SPRING_BOOT.* to ureservas;
